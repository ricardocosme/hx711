#include <cmath>
#include <initializer_list>
#include <iostream>
#include <string_view>
    
auto codes = {
    1213, 1196, 1183, 1228, 1219, 1243, 1212, 1201, 1202, 1199, 1200, 1195, 1202, 1182, 1187, 
     1200, 1177, 1183, 1178, 1200, 1198, 1204, 1170, 1166, 1173, 1160, 1160, 1165, 1182, 1189, 1207, 
     1190, 1192, 1183, 1187, 1206, 1226, 1193, 1181, 1171, 1170, 1161, 1138, 1148, 1163, 1203, 1206, 
     1193, 1204, 1219, 1196, 1194, 1198, 1164, 1172, 1209, 1216, 1174, 1168, 1166, 1198, 1216, 1242, 
     1245, 1208, 1204, 1206, 1221, 1187, 1158, 1216, 1243, 1194, 1155, 1147, 1180, 1201, 1186, 1168, 
     1151, 1176, 1173, 1164, 1173, 1176, 1187, 1180, 1191, 1191, 1188, 1190, 1202, 1174, 1163, 1192, 
     1168, 1178, 1141, 1131, 1171, 1183, 1198, 1179, 1197, 1184, 1178, 1176, 1161, 1145, 1154, 1163, 
     1193, 1201, 1159, 1180, 1173, 1196, 1192, 1171, 1179, 1189, 1229, 1227, 1180, 1161, 1169, 1159, 
     1157, 1188, 1167, 1182, 1215, 1194, 1187, 1176, 1184, 1195, 1201, 1226, 1231, 1194, 1197, 1230, 
     1202, 1172, 1167, 1146, 1161, 1185, 1211, 1205, 1178, 1187, 1164, 1161, 1143, 1183, 1156, 1122, 
     1151, 1188, 1169, 1138, 1163, 1193, 1153, 1132, 1177, 1176, 1143, 1142, 1149, 1157, 1134, 1188, 
     1208, 1152, 1123, 1151, 1191, 1222, 1182, 1143, 1117, 1147, 1181, 1190, 1157, 1132, 1135, 1178, 
     1175, 1160, 1178, 1179, 1168, 1165, 1177, 1180, 1139, 1144, 1188, 1173, 1113, 1153, 1172, 1128, 
     1169, 1185, 1167, 1151, 1149, 1149, 1148, 1169, 1169, 1181, 1191, 1193, 1171, 1202, 1211, 1139, 
     1158, 1179, 1182, 1124, 1114, 1147, 1140, 1175, 1165, 1184, 1183, 1188, 1217, 1157, 1151, 1191, 
     1192, 1197, 1171, 1167, 1185, 1155, 1140, 1160, 1186, 1174, 1163, 1185, 1177, 1189, 1197, 1195, 
     1161, 1177, 1179, 1186, 1193, 1200, 1196, 1181, 1222, 1202, 1173, 1176, 1176, 1176, 1176, 1227, 
     1214, 1157, 1164, 1170, 1170, 1171, 1160, 1130, 1158, 1163, 1193, 1210, 1156, 1165, 1195, 1179, 
     1173, 1171, 1157, 1187, 1180, 1182, 1194, 1196, 1165, 1178, 1153, 1174, 1218, 1204, 1182, 1180, 
     1188, 1174, 1177, 1201, 1191, 1181, 1187, 1173, 1165, 1179, 1193, 1205, 1207, 1207, 1212, 1184, 
     1156, 1202, 1191, 1161, 1174, 1203, 1194, 1201, 1187, 1155, 1204, 1215, 1171, 1172, 1161, 1151, 
     1181, 1193, 1230, 1225, 1202, 1185, 1197, 1210, 1234, 1195, 1176, 1168, 1179, 1194, 1186, 1152, 
     1172, 1187, 1165, 1186, 1218, 1220, 1214, 1215, 1159, 1168, 1192, 1195, 1186, 1156, 1228, 1262, 
     1260, 1237, 1193, 1177, 1195, 1156, 1138, 1152, 1162, 1175, 1181, 1185, 1174, 1154, 1161, 1145, 
     1166, 1187, 1198, 1183, 1150, 1125, 1142, 1136, 1151, 1186, 1204, 1199, 1163, 1160, 1148, 1170, 
     1187, 1162, 1193, 1194, 1157, 1160, 1179, 1170, 1164, 1203, 1191, 1189, 1172, 1173, 1172, 1154, 
     1177, 1188, 1180, 1172, 1153, 1140, 1148, 1141, 1171, 1143, 1118, 1145, 1185, 1175, 1189, 1191, 
     1193, 1195, 1189, 1194, 1205, 1174, 1162, 1187, 1178, 1157, 1160, 1139, 1175, 1218, 1203, 1188, 
     1178, 1153, 1183, 1180, 1161, 1159, 1144, 1152, 1208, 1179, 1170, 1157, 1139, 1136, 1113, 1142, 
     1218, 1168, 1155, 1172, 1187, 1181, 1156, 1160, 1168, 1167, 1161, 1145, 1169, 1175, 1154, 1172, 
     1194, 1190, 1170, 1196, 1202, 1183, 1177, 1176, 1142, 1187, 1191, 1169, 1134, 1154, 1187, 1185, 
     1138, 1157, 1139, 1126, 1138, 1152, 1147, 1165, 1175, 1109, 1097, 1117, 1145, 1166, 1174, 1174, 
     1167, 1129, 1166, 1171, 1136, 1104, 1092, 1142, 1150, 1146, 1155, 1188, 1196, 1139, 1141, 1144, 
     1157, 1136, 1148, 1170, 1192, 1171, 1173, 1125, 1126, 1174, 1181, 1164, 1161, 1188, 1200, 1172, 
     1124, 1162, 1159, 1167, 1177, 1152, 1160, 1157, 1112, 1141, 1174, 1179, 1139, 1176, 1135, 1136, 
     1152, 1135, 1132, 1151, 1144, 1182, 1186, 1197, 1186, 1154, 1133, 1148, 1170, 1149, 1182, 1147, 
     1166, 1185, 1181, 1165, 1193, 1172, 1198, 1164, 1139, 1115, 1149, 1204, 1204, 1173, 1154, 1169, 
     1158, 1146, 1156, 1163, 1146, 1144, 1144, 1164, 1150, 1123, 1125, 1128, 1151, 1181, 1181, 1156, 
     1143, 1129, 1152, 1170, 1149, 1160, 1180, 1127, 1120, 1105, 1127, 1151, 1156, 1163, 1132, 1127, 
     1155, 1171, 1176, 1141, 1155, 1150, 1161, 1175, 1191, 1218, 1224, 1203, 1197, 1185, 1138, 1128, 
     1131, 1146, 1166, 1156, 1177, 1147, 1153, 1182, 1152, 1137, 1173, 1216, 1200, 1155, 1152, 1190, 
     1195, 1230, 1195, 1165, 1150, 1210, 1188, 1176, 1142, 1133, 1170, 1166, 1192, 1188, 1142, 1151, 
     1160, 1166, 1132, 1100, 1103, 1128, 1124, 1122, 1123, 1155, 1174, 1184, 1173, 1186, 1172, 1145, 
     1151, 1166, 1169, 1178, 1192, 1199, 1159, 1126, 1164, 1190, 1145, 1166, 1186, 1198, 1233, 1242, 
     1206, 1196, 1171, 1155, 1181, 1188, 1192, 1198, 1183, 1173, 1158, 1160, 1189, 1177, 1207, 1196, 
     1174, 1202, 1216, 1194, 1160, 1185, 1214, 1213, 1205, 1179, 1188, 1169, 1202, 1198, 1191, 1235, 
     1245, 1178, 1179, 1223, 1228, 1189, 1180, 1230, 1201, 1188, 1189, 1161, 1151, 1164, 1184, 1195, 
     1217, 1243, 1183, 1157, 1172, 1177, 1167, 1166, 1190, 1190, 1172, 1175, 1208, 1200, 1171, 1190, 
     1158, 1179, 1175, 1226, 1223, 1184, 1160, 1160, 1180, 1179, 1187, 1194, 1201, 1170, 1161, 1182, 
     1179, 1180, 1165, 1190, 1203, 1152, 1163, 1188, 1183, 1142, 1137, 1194, 1204, 1203, 1190, 1196, 
     1232, 1198, 1142, 1152, 1174, 1188, 1203, 1197, 1176, 1151, 1148, 1164, 1184, 1199, 1190, 1169, 
     1147, 1180, 1203, 1191, 1181, 1164, 1202, 1229, 1170, 1164, 1159, 1131, 1180, 1196, 1193, 1185, 
     1199, 1190, 1180, 1185, 1196, 1167, 1163, 1143, 1160, 1196, 1161, 1166, 1189, 1194, 1163, 1165, 
     1178, 1173, 1176, 1155, 1179, 1207, 1178, 1207, 1181, 1156, 1135, 1181, 1197, 1148, 1152, 1174, 
     1192, 1190, 1138, 1136, 1166, 1141, 1145, 1152, 1158, 1207, 1191, 1184, 1179, 1186, 1127, 1134, 
     1140, 1150, 1152, 1164, 1186, 1209, 1156, 1157, 1161, 1162, 1149, 1140, 1180, 1173, 1174, 1184, 
     1190, 1147, 1117, 1164, 1176, 1190, 1194, 1186, 1147, 1147, 1191, 1168, 1142, 1148, 1166, 1161, 
     1156, 1153, 1180, 1171, 1138, 1164, 1132, 1167, 1207, 1166, 1160, 1116, 1133, 1166, 1148, 1165, 
     1167, 1125, 1169, 1205, 1195, 1171, 1173, 1186, 1147, 1169, 1145, 1169, 1169, 1171, 1171, 1159, 
     1155, 1119, 1132, 1156, 1167, 1159, 1170, 1162, 1148, 1123, 1145, 1171, 1197, 1219, 1159, 1146, 
     1180, 1185, 1169, 1160, 1145, 1164, 1157, 1154, 1125, 1136, 1164, 1205, 1187, 1184, 1164, 1176, 
     1180, 1161, 1179, 1165, 1116, 1117, 1143, 1174, 1190, 1173, 1154, 1145, 1146, 1161, 1187, 1195, 
     1176, 1161, 1095, 1108, 1147, 1127, 1178, 1179, 1154, 1152, 1140, 1146, 1132, 1153, 1178, 1148, 
     1154, 1166, 1179, 1163, 1175, 1159, 1139, 1139, 1206, 1199, 1186, 1156, 1170, 1182, 1161, 1177, 
     1193, 1155, 1167, 1161, 1162, 1188, 1186, 1143, 1152, 1166, 1144, 1137, 1143, 1127, 1142, 1123, 
     1126, 1188, 1160, 1115, 1141, 1143, 1179, 1164, 1171, 1154, 1145, 1173, 1190, 1119, 1109, 1107, 
     1162, 1158, 1120, 1157, 1161, 1174, 1181, 1161, 1165, 1217, 1198, 1195, 1156, 1151, 1179, 1163, 
     1163, 1179, 1156, 1144, 1160, 1210, 1224, 1198, 1193, 1177, 1178, 1173, 1185, 1176, 1186, 1217, 
     1219, 1222, 1211, 1179, 1193, 1175, 1103, 1171, 1224, 1181, 1171, 1155, 1138, 1134, 1131, 1128, 
     1203, 1165, 1154, 1116, 1101, 1147, 1124, 1129, 1139, 1180, 1187, 1155, 1170, 1203, 1189, 1164, 
     1193, 1195, 1192, 1160, 1170, 1166, 1174, 1166, 1199, 1206, 1172, 1184, 1156, 1142, 1192, 1175, 
     1163, 1168, 1198, 1186, 1172, 1170, 1150, 1161, 1141, 1134, 1170, 1191, 1193, 1157, 1150, 1157, 
     1141, 1149, 1172, 1143, 1130, 1076, 1137, 1166, 1138, 1174, 1186, 1173, 1187, 1188, 1182, 1167, 
     1143, 1148, 1198, 1189, 1188, 1181, 1155, 1143, 1162, 1172, 1149, 1123, 1127, 1167, 1180, 1180, 
     1183, 1171, 1143, 1139, 1146, 1139, 1151, 1169, 1144, 1136, 1162, 1189, 1159, 1115, 1121, 1122, 
     1142};

auto gain{128};
float lsb = 4.05 / (std::pow(2, 24) * gain);

template<typename Codes>
void report(std::string_view label, const Codes& codes) {
    std::cout << "[" << label << "]" << std::endl;
    std::cout << "samples size=" << codes.size() << std::endl;
    
    float mean{0};
    for(auto code : codes)
        mean += code;
    mean /= codes.size();
    std::cout << "mean=" << mean << std::endl;

    float sdev{0};
    for(auto code : codes) {
        auto diff = code - mean;
        sdev += diff * diff;
    }
    sdev = std::sqrt(sdev / codes.size() - 1);
    std::cout << "sdev=" << sdev << std::endl;

    std::cout << "noise 1sigma=" << lsb * sdev << "V" << std::endl;
    std::cout << "noise peak-to-peak (6.6sigma)=" << lsb * sdev * 6.6 << "V"
              << std::endl << std::endl;
}

int main() {
    std::cout << "LSB size=" << lsb << "V" << std::endl << std::endl;
    report("adc noise", codes);
}
